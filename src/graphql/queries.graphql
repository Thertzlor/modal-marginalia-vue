fragment totalPages on Pagination {
  total
}
fragment fullPage on Pagination {
  total
  page
  pageSize
  pageCount
}

query Init($pg: PaginationArg) {
  quotes_connection(pagination: $pg) {
    nodes {
      documentId
      text
    }
  }
  categories_connection(
    filters: { posts: { publishedAt: { notNull: true } } }
  ) {
    nodes {
      name
      slug
      priority
    }
  }
  posts_connection(
    pagination: { start: 0, limit: 5 }
    sort: "publishedAt:desc"
  ) {
    pageInfo {
      ...totalPages
    }
    nodes {
      human_id
      documentId
      publishedAt
      title
      slug
    }
  }
}

query lastPosts {
  posts_connection {
    pageInfo {
      ...totalPages
    }
  }
}

query about {
  aboutPage {
    text
    title
    footnotes
    toenotes
  }
}

query TagList {
  tags_connection(
    filters: {
      posts: { documentId: { notNull: true }, publishedAt: { notNull: true } }
    }
    pagination: { pageSize: 100 }
  ) {
    nodes {
      name
      slug
      color
      posts_connection(
        filters: {
          publishedAt: { notNull: true }
          documentId: { notNull: true }
        }
      ) {
        nodes {
          documentId
        }
      }
    }
  }
}

query postSearch(
  $postFilter: PostFiltersInput!
  $pg: PaginationArg!
  $sort: [String]
) {
  posts_connection(filters: $postFilter, pagination: $pg, sort: $sort) {
    pageInfo {
      ...fullPage
    }
    nodes {
      documentId
      human_id
      publishedAt
      body_searchable
      title
      teaser
      slug
      header {
        formats
        height
        width
        url
      }
      tags_connection {
        nodes {
          name
          slug
          color
        }
      }
      category {
        name
        slug
        color
      }
    }
  }
}

query SinglePost($postId: Int, $commentPagination: PaginationArg) {
  comments_connection(
    filters: { post: { human_id: { eq: $postId } } }
    pagination: $commentPagination
  ) {
    pageInfo {
      ...fullPage
    }
    nodes {
      depth
      subcomments_connection {
        nodes {
          documentId
        }
      }
      createdAt
      content
      author {
        username
      }
    }
  }

  posts_connection(filters:{human_id:  {eq:$postId  }}) {
    nodes {
    documentId
    human_id
    title
    header {
      url
      caption
      width
      height
      alternativeText
      formats
    }
    body_vue
    slug
    toc
    publishedAt
    updatedAt
    comments_enabled
    footnotes
    toenotes
    category {
      color
      name
      slug
    }
    tags_connection {
      nodes {
        color
        name
        slug
      }
    }
  }
  }
}

query postCheck($postId: ID!) {
  post(documentId: $postId) {
    human_id
    publishedAt
    documentId
    updatedAt
  }
}

query PostCount($pf: PostFiltersInput, $pg: PaginationArg!) {
  posts_connection(filters: $pf, pagination: $pg) {
    pageInfo {
      total
      pageSize
    }
  }
}

query PostList(
  $pf: PostFiltersInput
  $tf: TagFiltersInput!
  $cf: CategoryFiltersInput
  $pg: PaginationArg!
) {
  posts_connection(filters: $pf, pagination: $pg, sort: "publishedAt:desc") {
    pageInfo {
      ...fullPage
    }
    nodes {
      human_id
      documentId
      publishedAt
      title
      teaser
      slug
      header {
        formats
      }
      tags_connection {
        nodes {
          name
          slug
          color
        }
      }
      category {
        name
        slug
        color
      }
    }
  }
  tags_connection(filters: $tf) {
    nodes {
      name
      slug
      color
      description
    }
  }
  categories_connection(filters: $cf) {
    nodes {
      name
      slug
      color
      description
    }
  }
}

mutation commentator(
  $post: ID!
  $username: String!
  $content: String!
  $email: String!
  $token: String!
) {
  createComment(
    data: {
      post: $post
      content: $content
      username: $username
      email: $email
      token: $token
    }
  ) {
    documentId
  }
}
