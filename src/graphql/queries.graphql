fragment totalPages on ResponseCollectionMeta{
  pagination{total}
}
fragment fullPage on ResponseCollectionMeta{
  pagination{
    total
    page
    pageSize
    pageCount
    }
}

query Init($pg: PaginationArg) {
  quotes(pagination: $pg) {
    data {
      id
      attributes {
        text
      }
    }
  }
  categories(filters:{posts:{publishedAt:{notNull:true}}}) {
    data {
      attributes {
        name
        slug
        priority
      }
    }
  }
  posts(pagination: { start: 0, limit: 5 }, sort: "publishedAt:desc") {
    meta {
      ...totalPages
    }
    data {
      id
      attributes {
        publishedAt
        title
        slug
      }
    }
  }
}

query lastPosts {
  posts {
    meta {
      ...totalPages
    }
  }
}

query about {
  aboutPage {
    data {
      attributes {
        text
        title
        footnotes
        toenotes
      }
    }
  }
}

query TagList {
  tags(
    filters: {
      posts: { id: { notNull: true }, publishedAt: { notNull: true } }
    }
  ) {
    data {
      attributes {
        name
        slug
        color
        posts(
          filters: { publishedAt: { notNull: true }, id: { notNull: true } }
        ) {
          data {
            id
          }
        }
      }
    }
  }
}

query postSearch(
  $postFilter: PostFiltersInput!
  $pg: PaginationArg!
  $sort: [String]
) {
  posts(filters: $postFilter, pagination: $pg, sort: $sort) {
    meta {
      ...fullPage
    }
    data {
      id
      attributes {
        publishedAt
        body_searchable
        title
        teaser
        slug
        header {
          data {
            attributes {
              formats
            }
          }
        }
        tags {
          data {
            attributes {
              name
              slug
              color
            }
          }
        }
        category {
          data {
            attributes {
              name
              slug
              color
            }
          }
        }
      }
    }
  }
}

query SinglePost($postId: ID, $commentPagination: PaginationArg) {
  comments(filters: { post: { id: { eq: $postId } } }, pagination:$commentPagination) {
    meta {
      ...fullPage
    }
    data {
      attributes {
        depth
        subcomments {
          data {
            id
          }
        }
        createdAt
        content
        author {
          data {
            attributes {
              username
            }
          }
        }
      }
    }
  }

  post(id: $postId) {
    data {
      id
      attributes {
        title
        header {
          data {
            attributes {
              url
              caption
              width
              height
              alternativeText
              formats
            }
          }
        }
        body_vue
        slug
        toc
        publishedAt
        updatedAt
        comments_enabled
        footnotes
        toenotes
        category {
          data {
            attributes {
              color
              name
              slug
            }
          }
        }
        tags {
          data {
            attributes {
              color
              name
              slug
            }
          }
        }
      }
    }
  }
}


query postCheck($postId: ID) {
  post(id: $postId) {
    data {
      id
      attributes {
        updatedAt
      }
    }
  }
}

query PostCount($pf: PostFiltersInput, $pg: PaginationArg!) {
  posts(filters: $pf, pagination: $pg) {
    meta {
      pagination {
        total
        pageSize
      }
    }
  }
}

query PostList(
  $pf: PostFiltersInput
  $tf: TagFiltersInput!
  $cf: CategoryFiltersInput
  $pg: PaginationArg!
) {
  posts(filters: $pf, pagination: $pg, sort: "publishedAt:desc") {
    meta {
      ...fullPage
    }
    data {
      id
      attributes {
        publishedAt
        title
        teaser
        slug
        header {
          data {
            attributes {
              formats
            }
          }
        }
        tags {
          data {
            attributes {
              name
              slug
              color
            }
          }
        }
        category {
          data {
            attributes {
              name
              slug
              color
            }
          }
        }
      }
    }
  }
  tags(filters: $tf) {
    data {
      attributes {
        name
        slug
        color
        description
      }
    }
  }
  categories(filters: $cf) {
    data {
      attributes {
        name
        slug
        color
        description
      }
    }
  }
}

mutation commentator(
  $post: ID!
  $username: String!
  $content: String!
  $email: String!
  $token: String!
) {
  createComment(
    data: {
      post: $post
      content: $content
      username: $username
      email: $email
      token: $token
    }
  ) {
    data {
      id
    }
  }
}
